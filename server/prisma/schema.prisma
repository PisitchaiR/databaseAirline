// This is your Prisma schema file, // learn more about it in the docs: https://pris.ly/d/prisma-schema 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  role        Role          @default(customer)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  reservation Reservation[]
}

enum Role {
  customer
  personnel
}

model Coupon {
  id          String        @id @default(cuid())
  name        String        @unique
  discount    Int
  expired     DateTime
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Reservation Reservation[]
}

model Reservation {
  id        String   @id @default(cuid())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  email     String
  phone     String
  date      DateTime
  idCoupon  String?
  Coupon    Coupon?  @relation(fields: [idCoupon], references: [id])
  idUser    String
  User      User     @relation(fields: [idUser], references: [id])
  flightId  String
  Flight    Flight   @relation(fields: [flightId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Flight {
  id            String        @id @default(cuid())
  name          String        @unique
  price         Float
  type          flightType
  seat          Int
  departureDate DateTime      @map("departure_date")
  arrivalDate   DateTime      @map("arrival_date")
  fromAirportId String        @map("from_airport_id")
  toAirportId   String        @map("to_airport_id")
  airlineId     String?
  planeId       String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Reservation   Reservation[]
  FromAirport   Airport       @relation("FromAirport", fields: [fromAirportId], references: [id])
  ToAirport     Airport       @relation("ToAirport", fields: [toAirportId], references: [id])
  Airline       Airline?      @relation(fields: [airlineId], references: [id])
  Plane         Plane?        @relation(fields: [planeId], references: [id])
}

enum flightType {
  oneWay
  twoWay
}

model Countries {
  code      String    @id
  nameTh    String    @unique @map("name_th")
  nameEn    String    @unique @map("name_eg")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  airport   Airport[]
}

model Airport {
  id            String             @id @default(cuid())
  nameTh        String             @unique @map("name_th")
  nameEn        String             @unique @map("name_eg")
  countriesId   String?
  fromAirportId Flight[]           @relation("FromAirport")
  toAirportId   Flight[]           @relation("ToAirport")
  airline       AirlineInAirport[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  Countries     Countries?         @relation(fields: [countriesId], references: [code])

  @@map("Air_Port")
}

model Plane {
  id        String      @id @default(cuid())
  name      String      @unique
  airlineId String?     @map("airline_id")
  status    planeStatus @default(available)
  flight    Flight[]
  Airline   Airline?    @relation(fields: [airlineId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum planeStatus {
  available
  unavailable
}

model Airline {
  id        String             @id @default(cuid())
  nameTh    String             @unique @map("name_th")
  nameEn    String             @unique @map("name_eg")
  phone     String
  plane     Plane[]
  flight    Flight[]
  airport   AirlineInAirport[]
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

//airline in airport 
model AirlineInAirport {
  id        String   @id @default(cuid())
  airPortId String?  @map("air_port_id")
  airlineId String?  @map("airline_id")
  AirPort   Airport? @relation(fields: [airPortId], references: [id])
  Airline   Airline? @relation(fields: [airlineId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Airline_In_Airport")
}
